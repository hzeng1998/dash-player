{
  "version": 3,
  "sources": [
    "..\\node_modules\\browser-pack\\_prelude.js",
    "core\\errors\\ErrorsBase.js",
    "core\\events\\EventsBase.js",
    "mss\\MssEvents.js",
    "mss\\MssFragmentInfoController.js",
    "mss\\MssFragmentMoofProcessor.js",
    "mss\\MssFragmentMoovProcessor.js",
    "mss\\MssFragmentProcessor.js",
    "mss\\MssHandler.js",
    "mss\\errors\\MssErrors.js",
    "mss\\index.js",
    "mss\\parser\\MssParser.js",
    "streaming\\MediaPlayerEvents.js",
    "streaming\\vo\\DashJSError.js",
    "streaming\\vo\\DataChunk.js",
    "streaming\\vo\\FragmentRequest.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ErrorsBase {\r\n    extend (errors, config) {\r\n        if (!errors) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const err in errors) {\r\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\r\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\r\n            this[err] = errors[err];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorsBase;",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../core/events/EventsBase';\r\n\r\nclass MssEvents extends EventsBase {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.FRAGMENT_INFO_LOADING_COMPLETED = 'fragmentInfoLoadingCompleted';\r\n    }\r\n}\r\n\r\nlet mssEvents = new MssEvents();\r\nexport default mssEvents;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MssEvents from './MssEvents';\r\nimport MSSFragmentMoofProcessor from './MssFragmentMoofProcessor';\r\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\r\n\r\nfunction MssFragmentInfoController(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n\r\n    let instance,\r\n        logger,\r\n        fragmentModel,\r\n        started,\r\n        type,\r\n        bufferTimeout,\r\n        startTime,\r\n        startFragmentTime,\r\n        index;\r\n\r\n    const streamProcessor = config.streamProcessor;\r\n    const eventBus = config.eventBus;\r\n    const metricsModel = config.metricsModel;\r\n    const playbackController = config.playbackController;\r\n    const ISOBoxer = config.ISOBoxer;\r\n    const baseURLController = config.baseURLController;\r\n    const debug = config.debug;\r\n    const controllerType = 'MssFragmentInfoController';\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n    }\r\n\r\n    function initialize() {\r\n        started = false;\r\n\r\n        startTime = null;\r\n        startFragmentTime = null;\r\n\r\n        // Register to StreamProcessor as external controller\r\n        streamProcessor.registerExternalController(instance);\r\n        type = streamProcessor.getType();\r\n        fragmentModel = streamProcessor.getFragmentModel();\r\n    }\r\n\r\n    function doStart() {\r\n        if (started === true) {\r\n            return;\r\n        }\r\n\r\n        logger.debug('Do start');\r\n\r\n        eventBus.on(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, onFragmentInfoLoadedCompleted, instance);\r\n\r\n        started = true;\r\n        startTime = new Date().getTime();\r\n        index = 0;\r\n\r\n        loadNextFragmentInfo();\r\n    }\r\n\r\n    function doStop() {\r\n        if (!started) {\r\n            return;\r\n        }\r\n        logger.debug('Do stop');\r\n\r\n        eventBus.off(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, onFragmentInfoLoadedCompleted, instance);\r\n\r\n        // Stop buffering process\r\n        clearTimeout(bufferTimeout);\r\n        started = false;\r\n\r\n        startTime = null;\r\n        startFragmentTime = null;\r\n    }\r\n\r\n    function reset() {\r\n        doStop();\r\n        streamProcessor.unregisterExternalController(instance);\r\n    }\r\n\r\n    function loadNextFragmentInfo() {\r\n        // Check if running state\r\n        if (!started) {\r\n            return;\r\n        }\r\n\r\n        // Get last segment from SegmentTimeline\r\n        const representation = getCurrentRepresentation();\r\n        const manifest = representation.adaptation.period.mpd.manifest;\r\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\r\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S_asArray;\r\n        const segment = segments[segments.length - 1];\r\n\r\n        logger.debug('Last fragment time: ' + (segment.t / adaptation.SegmentTemplate.timescale));\r\n\r\n        // Generate segment request\r\n        const request = getRequestForSegment(adaptation, representation, segment);\r\n\r\n        // Send segment request\r\n        requestFragment.call(this, request);\r\n    }\r\n\r\n    function delayLoadNextFragmentInfo(delay) {\r\n        clearTimeout(bufferTimeout);\r\n        bufferTimeout = setTimeout(function () {\r\n            bufferTimeout = null;\r\n            loadNextFragmentInfo();\r\n        }, delay * 1000);\r\n    }\r\n\r\n    function getRequestForSegment(adaptation, representation, segment) {\r\n        let timescale = adaptation.SegmentTemplate.timescale;\r\n        let request = new FragmentRequest();\r\n\r\n        request.mediaType = type;\r\n        request.type = 'FragmentInfoSegment';\r\n        // request.range = segment.mediaRange;\r\n        request.startTime = segment.t / timescale;\r\n        request.duration = segment.d / timescale;\r\n        request.timescale = timescale;\r\n        // request.availabilityStartTime = segment.availabilityStartTime;\r\n        // request.availabilityEndTime = segment.availabilityEndTime;\r\n        // request.wallStartTime = segment.wallStartTime;\r\n        request.quality = representation.index;\r\n        request.index = index++;\r\n        request.mediaInfo = streamProcessor.getMediaInfo();\r\n        request.adaptationIndex = representation.adaptation.index;\r\n        request.representationId = representation.id;\r\n        request.url = baseURLController.resolve(representation.path).url + adaptation.SegmentTemplate.media;\r\n        request.url = request.url.replace('$Bandwidth$', representation.bandwidth);\r\n        request.url = request.url.replace('$Time$', segment.tManifest ? segment.tManifest : segment.t);\r\n        request.url = request.url.replace('/Fragments(', '/FragmentInfo(');\r\n\r\n        return request;\r\n    }\r\n\r\n    function getCurrentRepresentation() {\r\n        const representationController = streamProcessor.getRepresentationController();\r\n        const representation = representationController.getCurrentRepresentation();\r\n\r\n        return representation;\r\n    }\r\n\r\n    function requestFragment(request) {\r\n\r\n        logger.debug('Load fragment for time: ' + request.startTime);\r\n        if (streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)) {\r\n            // We may have reached end of timeline in case of start-over streams\r\n            logger.debug('No more fragments');\r\n            return;\r\n        }\r\n\r\n        fragmentModel.executeRequest(request);\r\n    }\r\n\r\n    function onFragmentInfoLoadedCompleted(e) {\r\n        if (e.streamProcessor !== streamProcessor) {\r\n            return;\r\n        }\r\n\r\n        const request = e.fragmentInfo.request;\r\n        if (!e.fragmentInfo.response) {\r\n            logger.error('Load error', request.url);\r\n            return;\r\n        }\r\n\r\n        let deltaFragmentTime,\r\n            deltaTime;\r\n\r\n        logger.debug('FragmentInfo loaded: ', request.url);\r\n\r\n        if (!startFragmentTime) {\r\n            startFragmentTime = request.startTime;\r\n        }\r\n\r\n        try {\r\n            // Process FramgentInfo in order to update segment timeline (DVR window)\r\n            const mssFragmentMoofProcessor = MSSFragmentMoofProcessor(context).create({\r\n                metricsModel: metricsModel,\r\n                playbackController: playbackController,\r\n                ISOBoxer: ISOBoxer,\r\n                eventBus: eventBus,\r\n                debug: debug\r\n            });\r\n            mssFragmentMoofProcessor.updateSegmentList(e.fragmentInfo, streamProcessor);\r\n\r\n            deltaTime = (new Date().getTime() - startTime) / 1000;\r\n            deltaFragmentTime = (request.startTime + request.duration) - startFragmentTime;\r\n            delayLoadNextFragmentInfo(Math.max(0, (deltaFragmentTime - deltaTime)));\r\n        } catch (e) {\r\n            logger.fatal('Internal error while processing fragment info segment ');\r\n        }\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        controllerType: controllerType,\r\n        start: doStart,\r\n        getType: getType,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssFragmentInfoController.__dashjs_factory_name = 'MssFragmentInfoController';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport DashJSError from '../streaming/vo/DashJSError';\r\nimport MssErrors from './errors/MssErrors';\r\n\r\nimport Events from '../streaming/MediaPlayerEvents';\r\n\r\n/**\r\n * @module MssFragmentMoovProcessor\r\n * @param {Object} config object\r\n */\r\nfunction MssFragmentMoofProcessor(config) {\r\n\r\n    config = config || {};\r\n    let instance,\r\n        type,\r\n        logger;\r\n    const metricsModel = config.metricsModel;\r\n    const playbackController = config.playbackController;\r\n    const errorHandler = config.errHandler;\r\n    const eventBus = config.eventBus;\r\n    const ISOBoxer = config.ISOBoxer;\r\n    const debug = config.debug;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        type = '';\r\n    }\r\n\r\n    function processTfrf(request, tfrf, tfdt, streamProcessor) {\r\n        const representationController = streamProcessor.getRepresentationController();\r\n        const representation = representationController.getCurrentRepresentation();\r\n        const indexHandler = streamProcessor.getIndexHandler();\r\n\r\n        const manifest = representation.adaptation.period.mpd.manifest;\r\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\r\n        const timescale = adaptation.SegmentTemplate.timescale;\r\n\r\n        type = streamProcessor.getType();\r\n\r\n        if (manifest.type !== 'dynamic' && !manifest.timeShiftBufferDepth) {\r\n            return;\r\n        }\r\n\r\n        if (!tfrf) {\r\n            errorHandler.error(new DashJSError(MssErrors.MSS_NO_TFRF_CODE, MssErrors.MSS_NO_TFRF_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)\r\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S;\r\n        const entries = tfrf.entry;\r\n        let entry,\r\n            segmentTime,\r\n            range;\r\n        let segment = null;\r\n        let t = 0;\r\n        let availabilityStartTime = null;\r\n\r\n        if (entries.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)\r\n        entry = entries[0];\r\n\r\n        // In case of start-over streams, check if we have reached end of original manifest duration (set in timeShiftBufferDepth)\r\n        // => then do not update anymore timeline\r\n        if (manifest.type === 'static') {\r\n            // Get first segment time\r\n            segmentTime = segments[0].tManifest ? parseFloat(segments[0].tManifest) : segments[0].t;\r\n            if (entry.fragment_absolute_time > (segmentTime + (manifest.timeShiftBufferDepth * timescale))) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        logger.debug('entry - t = ', (entry.fragment_absolute_time / timescale));\r\n\r\n        // Get last segment time\r\n        segmentTime = segments[segments.length - 1].tManifest ? parseFloat(segments[segments.length - 1].tManifest) : segments[segments.length - 1].t;\r\n        logger.debug('Last segment - t = ', (segmentTime / timescale));\r\n\r\n        // Check if we have to append new segment to timeline\r\n        if (entry.fragment_absolute_time <= segmentTime) {\r\n            // Update DVR window range\r\n            // => set range end to end time of current segment\r\n            range = {\r\n                start: segments[0].t / timescale,\r\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\r\n            };\r\n\r\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\r\n            return;\r\n        }\r\n\r\n        logger.debug('Add new segment - t = ', (entry.fragment_absolute_time / timescale));\r\n        segment = {};\r\n        segment.t = entry.fragment_absolute_time;\r\n        segment.d = entry.fragment_duration;\r\n        // If timestamps starts at 0 relative to 1st segment (dynamic to static) then update segment time\r\n        if (segments[0].tManifest) {\r\n            segment.t -= parseFloat(segments[0].tManifest) - segments[0].t;\r\n            segment.tManifest = entry.fragment_absolute_time;\r\n        }\r\n        segments.push(segment);\r\n\r\n        // In case of static start-over streams, update content duration\r\n        if (manifest.type === 'static') {\r\n            if (type === 'video') {\r\n                segment = segments[segments.length - 1];\r\n                var end = (segment.t + segment.d) / timescale;\r\n                if (end > representation.adaptation.period.duration) {\r\n                    eventBus.trigger(Events.MANIFEST_VALIDITY_CHANGED, { sender: this, newDuration: end });\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        // In case of live streams, update segment timeline according to DVR window\r\n        else if (manifest.timeShiftBufferDepth && manifest.timeShiftBufferDepth > 0) {\r\n            // Get timestamp of the last segment\r\n            segment = segments[segments.length - 1];\r\n            t = segment.t;\r\n\r\n            // Determine the segments' availability start time\r\n            availabilityStartTime = Math.round((t - (manifest.timeShiftBufferDepth * timescale)) / timescale);\r\n\r\n            // Remove segments prior to availability start time\r\n            segment = segments[0];\r\n            while (Math.round(segment.t / timescale) < availabilityStartTime) {\r\n                logger.debug('Remove segment  - t = ' + (segment.t / timescale));\r\n                segments.splice(0, 1);\r\n                segment = segments[0];\r\n            }\r\n\r\n            // Update DVR window range => set range end to end time of current segment\r\n            range = {\r\n                start: segments[0].t / timescale,\r\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\r\n            };\r\n\r\n            updateDVR(type, range, streamProcessor.getStreamInfo().manifestInfo);\r\n        }\r\n\r\n        indexHandler.updateSegmentList(representation);\r\n    }\r\n\r\n    function updateDVR(type, range, manifestInfo) {\r\n        const dvrInfos = metricsModel.getMetricsFor(type).DVRInfo;\r\n        if (dvrInfos) {\r\n            if (dvrInfos.length === 0 || (dvrInfos.length > 0 && range.end > dvrInfos[dvrInfos.length - 1].range.end)) {\r\n                logger.debug('Update DVR Infos [' + range.start + ' - ' + range.end + ']');\r\n                metricsModel.addDVRInfo(type, playbackController.getTime(), manifestInfo, range);\r\n            }\r\n        }\r\n    }\r\n\r\n    // This function returns the offset of the 1st byte of a child box within a container box\r\n    function getBoxOffset(parent, type) {\r\n        let offset = 8;\r\n        let i = 0;\r\n\r\n        for (i = 0; i < parent.boxes.length; i++) {\r\n            if (parent.boxes[i].type === type) {\r\n                return offset;\r\n            }\r\n            offset += parent.boxes[i].size;\r\n        }\r\n        return offset;\r\n    }\r\n\r\n    function convertFragment(e, sp) {\r\n        let i;\r\n\r\n        // e.request contains request description object\r\n        // e.response contains fragment bytes\r\n        const isoFile = ISOBoxer.parseBuffer(e.response);\r\n        // Update track_Id in tfhd box\r\n        const tfhd = isoFile.fetch('tfhd');\r\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\r\n\r\n        // Add tfdt box\r\n        let tfdt = isoFile.fetch('tfdt');\r\n        const traf = isoFile.fetch('traf');\r\n        if (tfdt === null) {\r\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\r\n            tfdt.version = 1;\r\n            tfdt.flags = 0;\r\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\r\n        }\r\n\r\n        const trun = isoFile.fetch('trun');\r\n\r\n        // Process tfxd boxes\r\n        // This box provide absolute timestamp but we take the segment start time for tfdt\r\n        let tfxd = isoFile.fetch('tfxd');\r\n        if (tfxd) {\r\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\r\n            tfxd = null;\r\n        }\r\n        let tfrf = isoFile.fetch('tfrf');\r\n        processTfrf(e.request, tfrf, tfdt, sp);\r\n        if (tfrf) {\r\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\r\n            tfrf = null;\r\n        }\r\n\r\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\r\n        // => convert sepiff box it into a senc box\r\n        // => create saio and saiz boxes (if not already present)\r\n        const sepiff = isoFile.fetch('sepiff');\r\n        if (sepiff !== null) {\r\n            sepiff.type = 'senc';\r\n            sepiff.usertype = undefined;\r\n\r\n            let saio = isoFile.fetch('saio');\r\n            if (saio === null) {\r\n                // Create Sample Auxiliary Information Offsets Box box (saio)\r\n                saio = ISOBoxer.createFullBox('saio', traf);\r\n                saio.version = 0;\r\n                saio.flags = 0;\r\n                saio.entry_count = 1;\r\n                saio.offset = [0];\r\n\r\n                const saiz = ISOBoxer.createFullBox('saiz', traf);\r\n                saiz.version = 0;\r\n                saiz.flags = 0;\r\n                saiz.sample_count = sepiff.sample_count;\r\n                saiz.default_sample_info_size = 0;\r\n                saiz.sample_info_size = [];\r\n\r\n                if (sepiff.flags & 0x02) {\r\n                    // Sub-sample encryption => set sample_info_size for each sample\r\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\r\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\r\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\r\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\r\n                    }\r\n                } else {\r\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\r\n                    saiz.default_sample_info_size = 8;\r\n                }\r\n            }\r\n        }\r\n\r\n        tfhd.flags &= 0xFFFFFE; // set tfhd.base-data-offset-present to false\r\n        tfhd.flags |= 0x020000; // set tfhd.default-base-is-moof to true\r\n        trun.flags |= 0x000001; // set trun.data-offset-present to true\r\n\r\n        // Update trun.data_offset field that corresponds to first data byte (inside mdat box)\r\n        const moof = isoFile.fetch('moof');\r\n        let length = moof.getLength();\r\n        trun.data_offset = length + 8;\r\n\r\n        // Update saio box offset field according to new senc box offset\r\n        let saio = isoFile.fetch('saio');\r\n        if (saio !== null) {\r\n            let trafPosInMoof = getBoxOffset(moof, 'traf');\r\n            let sencPosInTraf = getBoxOffset(traf, 'senc');\r\n            // Set offset from begin fragment to the first IV field in senc box\r\n            saio.offset[0] = trafPosInMoof + sencPosInTraf + 16; // 16 = box header (12) + sample_count field size (4)\r\n        }\r\n\r\n        // Write transformed/processed fragment into request reponse data\r\n        e.response = isoFile.write();\r\n    }\r\n\r\n    function updateSegmentList(e, sp) {\r\n        // e.request contains request description object\r\n        // e.response contains fragment bytes\r\n        if (!e.response) {\r\n            throw new Error('e.response parameter is missing');\r\n        }\r\n\r\n        const isoFile = ISOBoxer.parseBuffer(e.response);\r\n        // Update track_Id in tfhd box\r\n        const tfhd = isoFile.fetch('tfhd');\r\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\r\n\r\n        // Add tfdt box\r\n        let tfdt = isoFile.fetch('tfdt');\r\n        let traf = isoFile.fetch('traf');\r\n        if (tfdt === null) {\r\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\r\n            tfdt.version = 1;\r\n            tfdt.flags = 0;\r\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\r\n        }\r\n\r\n        let tfrf = isoFile.fetch('tfrf');\r\n        processTfrf(e.request, tfrf, tfdt, sp);\r\n        if (tfrf) {\r\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\r\n            tfrf = null;\r\n        }\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    instance = {\r\n        convertFragment: convertFragment,\r\n        updateSegmentList: updateSegmentList,\r\n        getType: getType\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nMssFragmentMoofProcessor.__dashjs_factory_name = 'MssFragmentMoofProcessor';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n import MssErrors from './errors/MssErrors';\r\n\r\n/**\r\n * @module MssFragmentMoovProcessor\r\n * @param {Object} config object\r\n */\r\nfunction MssFragmentMoovProcessor(config) {\r\n    config = config || {};\r\n    const NALUTYPE_SPS = 7;\r\n    const NALUTYPE_PPS = 8;\r\n    const constants = config.constants;\r\n    const ISOBoxer = config.ISOBoxer;\r\n\r\n    let protectionController = config.protectionController;\r\n    let instance,\r\n        period,\r\n        adaptationSet,\r\n        representation,\r\n        contentProtection,\r\n        timescale,\r\n        trackId;\r\n\r\n    function createFtypBox(isoFile) {\r\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\r\n        ftyp.major_brand = 'iso6';\r\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\r\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\r\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\r\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\r\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\r\n\r\n        return ftyp;\r\n    }\r\n\r\n    function createMoovBox(isoFile) {\r\n\r\n        // moov box\r\n        let moov = ISOBoxer.createBox('moov', isoFile);\r\n\r\n        // moov/mvhd\r\n        createMvhdBox(moov);\r\n\r\n        // moov/trak\r\n        let trak = ISOBoxer.createBox('trak', moov);\r\n\r\n        // moov/trak/tkhd\r\n        createTkhdBox(trak);\r\n\r\n        // moov/trak/mdia\r\n        let mdia = ISOBoxer.createBox('mdia', trak);\r\n\r\n        // moov/trak/mdia/mdhd\r\n        createMdhdBox(mdia);\r\n\r\n        // moov/trak/mdia/hdlr\r\n        createHdlrBox(mdia);\r\n\r\n        // moov/trak/mdia/minf\r\n        let minf = ISOBoxer.createBox('minf', mdia);\r\n\r\n        switch (adaptationSet.type) {\r\n            case constants.VIDEO:\r\n                // moov/trak/mdia/minf/vmhd\r\n                createVmhdBox(minf);\r\n                break;\r\n            case constants.AUDIO:\r\n                // moov/trak/mdia/minf/smhd\r\n                createSmhdBox(minf);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // moov/trak/mdia/minf/dinf\r\n        let dinf = ISOBoxer.createBox('dinf', minf);\r\n\r\n        // moov/trak/mdia/minf/dinf/dref\r\n        createDrefBox(dinf);\r\n\r\n        // moov/trak/mdia/minf/stbl\r\n        let stbl = ISOBoxer.createBox('stbl', minf);\r\n\r\n        // Create empty stts, stsc, stco and stsz boxes\r\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\r\n\r\n        // moov/trak/mdia/minf/stbl/stts\r\n        let stts = ISOBoxer.createFullBox('stts', stbl);\r\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stsc\r\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\r\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stco\r\n        let stco = ISOBoxer.createFullBox('stco', stbl);\r\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stsz\r\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\r\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stsd\r\n        createStsdBox(stbl);\r\n\r\n        // moov/mvex\r\n        let mvex = ISOBoxer.createBox('mvex', moov);\r\n\r\n        // moov/mvex/trex\r\n        createTrexBox(mvex);\r\n\r\n        if (contentProtection && protectionController) {\r\n            let supportedKS = protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);\r\n            createProtectionSystemSpecificHeaderBox(moov, supportedKS);\r\n        }\r\n    }\r\n\r\n    function createMvhdBox(moov) {\r\n\r\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\r\n\r\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\r\n\r\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\r\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\r\n        mvhd.timescale = timescale; // the time-scale for the entire presentation => 10000000 for MSS\r\n        mvhd.duration = Math.round(period.duration * timescale); // the length of the presentation (in the indicated timescale) =>  take duration of period\r\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\r\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\r\n        mvhd.reserved1 = 0;\r\n        mvhd.reserved2 = [0x0, 0x0];\r\n        mvhd.matrix = [\r\n            1, 0, 0, // provides a transformation matrix for the video;\r\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\r\n            0, 0, 16384\r\n        ];\r\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\r\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\r\n\r\n        return mvhd;\r\n    }\r\n\r\n    function createTkhdBox(trak) {\r\n\r\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\r\n\r\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\r\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\r\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\r\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\r\n\r\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\r\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\r\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\r\n        tkhd.reserved1 = 0;\r\n        tkhd.duration = Math.round(period.duration * timescale); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\r\n        tkhd.reserved2 = [0x0, 0x0];\r\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\r\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\r\n        tkhd.volume = 1.0; // '1.0' = full volume\r\n        tkhd.reserved3 = 0;\r\n        tkhd.matrix = [\r\n            1, 0, 0, // provides a transformation matrix for the video;\r\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\r\n            0, 0, 16384\r\n        ];\r\n        tkhd.width = representation.width; // visual presentation width\r\n        tkhd.height = representation.height; // visual presentation height\r\n\r\n        return tkhd;\r\n    }\r\n\r\n    function createMdhdBox(mdia) {\r\n\r\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\r\n\r\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\r\n\r\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\r\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\r\n        mdhd.timescale = timescale; // the time-scale for the entire presentation\r\n        mdhd.duration = Math.round(period.duration * timescale); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\r\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media (see getLanguageCode())\r\n        mdhd.pre_defined = 0;\r\n\r\n        return mdhd;\r\n    }\r\n\r\n    function createHdlrBox(mdia) {\r\n\r\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\r\n\r\n        hdlr.pre_defined = 0;\r\n        switch (adaptationSet.type) {\r\n            case constants.VIDEO:\r\n                hdlr.handler_type = 'vide';\r\n                break;\r\n            case constants.AUDIO:\r\n                hdlr.handler_type = 'soun';\r\n                break;\r\n            default:\r\n                hdlr.handler_type = 'meta';\r\n                break;\r\n        }\r\n        hdlr.name = representation.id;\r\n        hdlr.reserved = [0, 0, 0];\r\n\r\n        return hdlr;\r\n    }\r\n\r\n    function createVmhdBox(minf) {\r\n\r\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\r\n\r\n        vmhd.flags = 1;\r\n\r\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\r\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\r\n\r\n        return vmhd;\r\n    }\r\n\r\n    function createSmhdBox(minf) {\r\n\r\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\r\n\r\n        smhd.flags = 1;\r\n\r\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\r\n        smhd.reserved = 0;\r\n\r\n        return smhd;\r\n    }\r\n\r\n    function createDrefBox(dinf) {\r\n\r\n        let dref = ISOBoxer.createFullBox('dref', dinf);\r\n\r\n        dref.entry_count = 1;\r\n        dref.entries = [];\r\n\r\n        let url = ISOBoxer.createFullBox('url ', dref, false);\r\n        url.location = '';\r\n        url.flags = 1;\r\n\r\n        dref.entries.push(url);\r\n\r\n        return dref;\r\n    }\r\n\r\n    function createStsdBox(stbl) {\r\n\r\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\r\n\r\n        stsd.entries = [];\r\n        switch (adaptationSet.type) {\r\n            case constants.VIDEO:\r\n            case constants.AUDIO:\r\n                stsd.entries.push(createSampleEntry(stsd));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\r\n        return stsd;\r\n    }\r\n\r\n    function createSampleEntry(stsd) {\r\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\r\n\r\n        switch (codec) {\r\n            case 'avc1':\r\n                return createAVCVisualSampleEntry(stsd, codec);\r\n            case 'mp4a':\r\n                return createMP4AudioSampleEntry(stsd, codec);\r\n            default:\r\n                throw {\r\n                    code: MssErrors.MSS_UNSUPPORTED_CODEC_CODE,\r\n                    message: MssErrors.MSS_UNSUPPORTED_CODEC_MESSAGE,\r\n                    data: {\r\n                        codec: codec\r\n                    }\r\n                };\r\n        }\r\n    }\r\n\r\n    function createAVCVisualSampleEntry(stsd, codec) {\r\n        let avc1;\r\n\r\n        if (contentProtection) {\r\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\r\n        } else {\r\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\r\n        }\r\n\r\n        // SampleEntry fields\r\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\r\n        avc1.data_reference_index = 1;\r\n\r\n        // VisualSampleEntry fields\r\n        avc1.pre_defined1 = 0;\r\n        avc1.reserved2 = 0;\r\n        avc1.pre_defined2 = [0, 0, 0];\r\n        avc1.height = representation.height;\r\n        avc1.width = representation.width;\r\n        avc1.horizresolution = 72; // 72 dpi\r\n        avc1.vertresolution = 72; // 72 dpi\r\n        avc1.reserved3 = 0;\r\n        avc1.frame_count = 1; // 1 compressed video frame per sample\r\n        avc1.compressorname = [\r\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\r\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\r\n        ];\r\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\r\n        avc1.pre_defined3 = 65535;\r\n        avc1.config = createAVC1ConfigurationRecord();\r\n        if (contentProtection) {\r\n            // Create and add Protection Scheme Info Box\r\n            let sinf = ISOBoxer.createBox('sinf', avc1);\r\n\r\n            // Create and add Original Format Box => indicate codec type of the encrypted content\r\n            createOriginalFormatBox(sinf, codec);\r\n\r\n            // Create and add Scheme Type box\r\n            createSchemeTypeBox(sinf);\r\n\r\n            // Create and add Scheme Information Box\r\n            createSchemeInformationBox(sinf);\r\n        }\r\n\r\n        return avc1;\r\n    }\r\n\r\n    function createAVC1ConfigurationRecord() {\r\n\r\n        let avcC = null;\r\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\r\n\r\n        // First get all SPS and PPS from codecPrivateData\r\n        let sps = [];\r\n        let pps = [];\r\n        let AVCProfileIndication = 0;\r\n        let AVCLevelIndication = 0;\r\n        let profile_compatibility = 0;\r\n\r\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\r\n        let naluBytes, naluType;\r\n\r\n        for (let i = 0; i < nalus.length; i++) {\r\n            naluBytes = hexStringtoBuffer(nalus[i]);\r\n\r\n            naluType = naluBytes[0] & 0x1F;\r\n\r\n            switch (naluType) {\r\n                case NALUTYPE_SPS:\r\n                    sps.push(naluBytes);\r\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\r\n                    break;\r\n                case NALUTYPE_PPS:\r\n                    pps.push(naluBytes);\r\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Get profile and level from SPS\r\n        if (sps.length > 0) {\r\n            AVCProfileIndication = sps[0][1];\r\n            profile_compatibility = sps[0][2];\r\n            AVCLevelIndication = sps[0][3];\r\n        }\r\n\r\n        // Generate avcC buffer\r\n        avcC = new Uint8Array(avcCLength);\r\n\r\n        let i = 0;\r\n        // length\r\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\r\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\r\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\r\n        avcC[i++] = (avcCLength & 0x000000FF);\r\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\r\n        i += 4;\r\n        avcC[i++] = 1; // configurationVersion = 1\r\n        avcC[i++] = AVCProfileIndication;\r\n        avcC[i++] = profile_compatibility;\r\n        avcC[i++] = AVCLevelIndication;\r\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\r\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\r\n        for (let n = 0; n < sps.length; n++) {\r\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\r\n            avcC[i++] = (sps[n].length & 0x00FF);\r\n            avcC.set(sps[n], i);\r\n            i += sps[n].length;\r\n        }\r\n        avcC[i++] = pps.length; // numOfPictureParameterSets\r\n        for (let n = 0; n < pps.length; n++) {\r\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\r\n            avcC[i++] = (pps[n].length & 0x00FF);\r\n            avcC.set(pps[n], i);\r\n            i += pps[n].length;\r\n        }\r\n\r\n        return avcC;\r\n    }\r\n\r\n    function createMP4AudioSampleEntry(stsd, codec) {\r\n        let mp4a;\r\n\r\n        if (contentProtection) {\r\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\r\n        } else {\r\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\r\n        }\r\n\r\n        // SampleEntry fields\r\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\r\n        mp4a.data_reference_index = 1;\r\n\r\n        // AudioSampleEntry fields\r\n        mp4a.reserved2 = [0x0, 0x0];\r\n        mp4a.channelcount = representation.audioChannels;\r\n        mp4a.samplesize = 16;\r\n        mp4a.pre_defined = 0;\r\n        mp4a.reserved_3 = 0;\r\n        mp4a.samplerate = representation.audioSamplingRate << 16;\r\n\r\n        mp4a.esds = createMPEG4AACESDescriptor();\r\n\r\n        if (contentProtection) {\r\n            // Create and add Protection Scheme Info Box\r\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\r\n\r\n            // Create and add Original Format Box => indicate codec type of the encrypted content\r\n            createOriginalFormatBox(sinf, codec);\r\n\r\n            // Create and add Scheme Type box\r\n            createSchemeTypeBox(sinf);\r\n\r\n            // Create and add Scheme Information Box\r\n            createSchemeInformationBox(sinf);\r\n        }\r\n\r\n        return mp4a;\r\n    }\r\n\r\n    function createMPEG4AACESDescriptor() {\r\n\r\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\r\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\r\n\r\n        // ESDS length = esds box header length (= 12) +\r\n        //               ES_Descriptor header length (= 5) +\r\n        //               DecoderConfigDescriptor header length (= 15) +\r\n        //               decoderSpecificInfo header length (= 2) +\r\n        //               AudioSpecificConfig length (= codecPrivateData length)\r\n        let esdsLength = 34 + audioSpecificConfig.length;\r\n        let esds = new Uint8Array(esdsLength);\r\n\r\n        let i = 0;\r\n        // esds box\r\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\r\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\r\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\r\n        esds[i++] = (esdsLength & 0x000000FF); // ''\r\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\r\n        i += 4;\r\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\r\n        i += 4;\r\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\r\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\r\n        esds[i++] = 20 + audioSpecificConfig.length; // size\r\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\r\n        esds[i++] = (trackId & 0x00FF); // ''\r\n        esds[i++] = 0; // flags and streamPriority\r\n\r\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\r\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\r\n        esds[i++] = 15 + audioSpecificConfig.length; // size\r\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\r\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\r\n        esds[i] |= 0 << 1; // upStream = 0\r\n        esds[i++] |= 1; // reserved = 1\r\n        esds[i++] = 0xFF; // buffersizeDB = undefined\r\n        esds[i++] = 0xFF; // ''\r\n        esds[i++] = 0xFF; // ''\r\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\r\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\r\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\r\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\r\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\r\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\r\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\r\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\r\n\r\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\r\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\r\n        esds[i++] = audioSpecificConfig.length; // size\r\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\r\n\r\n        return esds;\r\n    }\r\n\r\n    function createOriginalFormatBox(sinf, codec) {\r\n        let frma = ISOBoxer.createBox('frma', sinf);\r\n        frma.data_format = stringToCharCode(codec);\r\n    }\r\n\r\n    function createSchemeTypeBox(sinf) {\r\n        let schm = ISOBoxer.createFullBox('schm', sinf);\r\n\r\n        schm.flags = 0;\r\n        schm.version = 0;\r\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\r\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\r\n    }\r\n\r\n    function createSchemeInformationBox(sinf) {\r\n        let schi = ISOBoxer.createBox('schi', sinf);\r\n\r\n        // Create and add Track Encryption Box\r\n        createTrackEncryptionBox(schi);\r\n    }\r\n\r\n    function createProtectionSystemSpecificHeaderBox(moov, keySystems) {\r\n        let pssh_bytes,\r\n            pssh,\r\n            i,\r\n            parsedBuffer;\r\n\r\n        for (i = 0; i < keySystems.length; i += 1) {\r\n            pssh_bytes = keySystems[i].initData;\r\n            parsedBuffer = ISOBoxer.parseBuffer(pssh_bytes);\r\n            pssh = parsedBuffer.fetch('pssh');\r\n            if (pssh) {\r\n                ISOBoxer.Utils.appendBox(moov, pssh);\r\n            }\r\n        }\r\n    }\r\n\r\n    function createTrackEncryptionBox(schi) {\r\n        let tenc = ISOBoxer.createFullBox('tenc', schi);\r\n\r\n        tenc.flags = 0;\r\n        tenc.version = 0;\r\n\r\n        tenc.default_IsEncrypted = 0x1;\r\n        tenc.default_IV_size = 8;\r\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\r\n            contentProtection[0]['cenc:default_KID'] : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\r\n    }\r\n\r\n    function createTrexBox(moov) {\r\n        let trex = ISOBoxer.createFullBox('trex', moov);\r\n\r\n        trex.track_ID = trackId;\r\n        trex.default_sample_description_index = 1;\r\n        trex.default_sample_duration = 0;\r\n        trex.default_sample_size = 0;\r\n        trex.default_sample_flags = 0;\r\n\r\n        return trex;\r\n    }\r\n\r\n    function hexStringtoBuffer(str) {\r\n        let buf = new Uint8Array(str.length / 2);\r\n        let i;\r\n\r\n        for (i = 0; i < str.length / 2; i += 1) {\r\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\r\n        }\r\n        return buf;\r\n    }\r\n\r\n    function stringToCharCode(str) {\r\n        let code = 0;\r\n        let i;\r\n\r\n        for (i = 0; i < str.length; i += 1) {\r\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\r\n        }\r\n        return code;\r\n    }\r\n\r\n    function generateMoov(rep) {\r\n        if (!rep || !rep.adaptation) {\r\n            return;\r\n        }\r\n\r\n        let isoFile,\r\n            arrayBuffer;\r\n\r\n        representation = rep;\r\n        adaptationSet = representation.adaptation;\r\n\r\n        period = adaptationSet.period;\r\n        trackId = adaptationSet.index + 1;\r\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\r\n\r\n        timescale = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].SegmentTemplate.timescale;\r\n\r\n        isoFile = ISOBoxer.createFile();\r\n        createFtypBox(isoFile);\r\n        createMoovBox(isoFile);\r\n\r\n        arrayBuffer = isoFile.write();\r\n\r\n        return arrayBuffer;\r\n    }\r\n\r\n    instance = {\r\n        generateMoov: generateMoov\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMssFragmentMoovProcessor.__dashjs_factory_name = 'MssFragmentMoovProcessor';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor); /* jshint ignore:line */",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MSSFragmentMoofProcessor from './MssFragmentMoofProcessor';\r\nimport MSSFragmentMoovProcessor from './MssFragmentMoovProcessor';\r\nimport MssEvents from './MssEvents';\r\n\r\n\r\n// Add specific box processors not provided by codem-isoboxer library\r\n\r\nfunction arrayEqual(arr1, arr2) {\r\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\r\n        return element === arr2[index];\r\n    });\r\n}\r\n\r\nfunction saioProcessor() {\r\n    this._procFullBox();\r\n    if (this.flags & 1) {\r\n        this._procField('aux_info_type', 'uint', 32);\r\n        this._procField('aux_info_type_parameter', 'uint', 32);\r\n    }\r\n    this._procField('entry_count', 'uint', 32);\r\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\r\n}\r\n\r\nfunction saizProcessor() {\r\n    this._procFullBox();\r\n    if (this.flags & 1) {\r\n        this._procField('aux_info_type', 'uint', 32);\r\n        this._procField('aux_info_type_parameter', 'uint', 32);\r\n    }\r\n    this._procField('default_sample_info_size', 'uint', 8);\r\n    this._procField('sample_count', 'uint', 32);\r\n    if (this.default_sample_info_size === 0) {\r\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\r\n    }\r\n}\r\n\r\nfunction sencProcessor() {\r\n    this._procFullBox();\r\n    this._procField('sample_count', 'uint', 32);\r\n    if (this.flags & 1) {\r\n        this._procField('IV_size', 'uint', 8);\r\n    }\r\n    this._procEntries('entry', this.sample_count, function (entry) {\r\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\r\n        if (this.flags & 2) {\r\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\r\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\r\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\r\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction uuidProcessor() {\r\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\r\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\r\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\r\n\r\n    if (arrayEqual(this.usertype, tfxdUserType)) {\r\n        this._procFullBox();\r\n        if (this._parsing) {\r\n            this.type = 'tfxd';\r\n        }\r\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\r\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\r\n    }\r\n\r\n    if (arrayEqual(this.usertype, tfrfUserType)) {\r\n        this._procFullBox();\r\n        if (this._parsing) {\r\n            this.type = 'tfrf';\r\n        }\r\n        this._procField('fragment_count', 'uint', 8);\r\n        this._procEntries('entry', this.fragment_count, function (entry) {\r\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\r\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\r\n        });\r\n    }\r\n\r\n    if (arrayEqual(this.usertype, sepiffUserType)) {\r\n        if (this._parsing) {\r\n            this.type = 'sepiff';\r\n        }\r\n        sencProcessor.call(this);\r\n    }\r\n}\r\n\r\nfunction MssFragmentProcessor(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const metricsModel = config.metricsModel;\r\n    const playbackController = config.playbackController;\r\n    const eventBus = config.eventBus;\r\n    const protectionController = config.protectionController;\r\n    const ISOBoxer = config.ISOBoxer;\r\n    const debug = config.debug;\r\n    let mssFragmentMoovProcessor,\r\n        mssFragmentMoofProcessor,\r\n        instance;\r\n\r\n    function setup() {\r\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\r\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\r\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\r\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\r\n\r\n        mssFragmentMoovProcessor = MSSFragmentMoovProcessor(context).create({protectionController: protectionController,\r\n            constants: config.constants, ISOBoxer: ISOBoxer});\r\n\r\n        mssFragmentMoofProcessor = MSSFragmentMoofProcessor(context).create({\r\n                metricsModel: metricsModel,\r\n                playbackController: playbackController,\r\n                ISOBoxer: ISOBoxer,\r\n                eventBus: eventBus,\r\n                debug: debug,\r\n                errHandler: config.errHandler\r\n            });\r\n    }\r\n\r\n    function generateMoov(rep) {\r\n        return mssFragmentMoovProcessor.generateMoov(rep);\r\n    }\r\n\r\n    function processFragment(e, sp) {\r\n        if (!e || !e.request || !e.response) {\r\n            throw new Error('e parameter is missing or malformed');\r\n        }\r\n\r\n        let request = e.request;\r\n\r\n        if (request.type === 'MediaSegment') {\r\n            // it's a MediaSegment, let's convert fragment\r\n            mssFragmentMoofProcessor.convertFragment(e, sp);\r\n\r\n        } else if (request.type === 'FragmentInfoSegment') {\r\n\r\n            // it's a FragmentInfo, ask relative fragment info controller to handle it\r\n            eventBus.trigger(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, {\r\n                fragmentInfo: e,\r\n                streamProcessor: sp\r\n            });\r\n\r\n            // Change the sender value to stop event to be propagated (fragment info must not be added to buffer)\r\n            e.sender = null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        generateMoov: generateMoov,\r\n        processFragment: processFragment\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport DataChunk from '../streaming/vo/DataChunk';\r\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\r\nimport MssFragmentInfoController from './MssFragmentInfoController';\r\nimport MssFragmentProcessor from './MssFragmentProcessor';\r\nimport MssParser from './parser/MssParser';\r\nimport MssErrors from './errors/MssErrors';\r\nimport DashJSError from '../streaming/vo/DashJSError';\r\n\r\nfunction MssHandler(config) {\r\n\r\n    config = config || {};\r\n    let context = this.context;\r\n    let eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const constants = config.constants;\r\n    const initSegmentType = config.initSegmentType;\r\n    let metricsModel = config.metricsModel;\r\n    let playbackController = config.playbackController;\r\n    let protectionController = config.protectionController;\r\n    let mssFragmentProcessor = MssFragmentProcessor(context).create({\r\n        metricsModel: metricsModel,\r\n        playbackController: playbackController,\r\n        protectionController: protectionController,\r\n        eventBus: eventBus,\r\n        constants: constants,\r\n        ISOBoxer: config.ISOBoxer,\r\n        debug: config.debug,\r\n        errHandler: config.errHandler\r\n    });\r\n    let mssParser,\r\n        instance;\r\n\r\n    function setup() {}\r\n\r\n    function onInitializationRequested(e) {\r\n        let streamProcessor = e.sender.getStreamProcessor();\r\n        let request = new FragmentRequest();\r\n        let representationController = streamProcessor.getRepresentationController();\r\n        let representation = representationController.getCurrentRepresentation();\r\n\r\n        request.mediaType = representation.adaptation.type;\r\n        request.type = initSegmentType;\r\n        request.range = representation.range;\r\n        request.quality = representation.index;\r\n        request.mediaInfo = streamProcessor.getMediaInfo();\r\n        request.representationId = representation.id;\r\n\r\n        const chunk = createDataChunk(request, streamProcessor.getStreamInfo().id, e.type !== events.FRAGMENT_LOADING_PROGRESS);\r\n\r\n        try {\r\n            // Generate initialization segment (moov)\r\n            chunk.bytes = mssFragmentProcessor.generateMoov(representation);\r\n        } catch (e) {\r\n            config.errHandler.error(new DashJSError(e.code, e.message, e.data));\r\n        }\r\n\r\n        eventBus.trigger(events.INIT_FRAGMENT_LOADED, {\r\n            chunk: chunk,\r\n            fragmentModel: streamProcessor.getFragmentModel()\r\n        });\r\n\r\n        // Change the sender value to stop event to be propagated\r\n        e.sender = null;\r\n    }\r\n\r\n    function createDataChunk(request, streamId, endFragment) {\r\n        const chunk = new DataChunk();\r\n\r\n        chunk.streamId = streamId;\r\n        chunk.mediaInfo = request.mediaInfo;\r\n        chunk.segmentType = request.type;\r\n        chunk.start = request.startTime;\r\n        chunk.duration = request.duration;\r\n        chunk.end = chunk.start + chunk.duration;\r\n        chunk.index = request.index;\r\n        chunk.quality = request.quality;\r\n        chunk.representationId = request.representationId;\r\n        chunk.endFragment = endFragment;\r\n\r\n        return chunk;\r\n    }\r\n\r\n    function startFragmentInfoControllers() {\r\n\r\n        let streamController = playbackController.getStreamController();\r\n        if (!streamController) {\r\n            return;\r\n        }\r\n\r\n        // Create MssFragmentInfoControllers for each StreamProcessor of active stream (only for audio, video or fragmentedText)\r\n        let processors = streamController.getActiveStreamProcessors();\r\n        processors.forEach(function (processor) {\r\n            if (processor.getType() === constants.VIDEO ||\r\n                processor.getType() === constants.AUDIO ||\r\n                processor.getType() === constants.FRAGMENTED_TEXT) {\r\n\r\n                // Check MssFragmentInfoController already registered to StreamProcessor\r\n                let i;\r\n                let alreadyRegistered = false;\r\n                let externalControllers = processor.getExternalControllers();\r\n                for (i = 0; i < externalControllers.length; i++) {\r\n                    if (externalControllers[i].controllerType &&\r\n                        externalControllers[i].controllerType === 'MssFragmentInfoController') {\r\n                        alreadyRegistered = true;\r\n                    }\r\n                }\r\n\r\n                if (!alreadyRegistered) {\r\n                    let fragmentInfoController = MssFragmentInfoController(context).create({\r\n                        streamProcessor: processor,\r\n                        eventBus: eventBus,\r\n                        metricsModel: metricsModel,\r\n                        playbackController: playbackController,\r\n                        baseURLController: config.baseURLController,\r\n                        ISOBoxer: config.ISOBoxer,\r\n                        debug: config.debug\r\n                    });\r\n                    fragmentInfoController.initialize();\r\n                    fragmentInfoController.start();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function onSegmentMediaLoaded(e) {\r\n        if (e.error) {\r\n            return;\r\n        }\r\n        // Process moof to transcode it from MSS to DASH\r\n        let streamProcessor = e.sender.getStreamProcessor();\r\n        mssFragmentProcessor.processFragment(e, streamProcessor);\r\n\r\n        // Start MssFragmentInfoControllers in case of start-over streams\r\n        let streamInfo = streamProcessor.getStreamInfo();\r\n        if (!streamInfo.manifestInfo.isDynamic && streamInfo.manifestInfo.DVRWindowSize !== Infinity) {\r\n            startFragmentInfoControllers();\r\n        }\r\n    }\r\n\r\n    function onPlaybackPaused() {\r\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\r\n            startFragmentInfoControllers();\r\n        }\r\n    }\r\n\r\n    function onPlaybackSeekAsked() {\r\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\r\n            startFragmentInfoControllers();\r\n        }\r\n    }\r\n\r\n    function onTTMLPreProcess(ttmlSubtitles) {\r\n        if (!ttmlSubtitles || !ttmlSubtitles.data) {\r\n            return;\r\n        }\r\n\r\n        ttmlSubtitles.data = ttmlSubtitles.data.replace(/http:\\/\\/www.w3.org\\/2006\\/10\\/ttaf1/gi, 'http://www.w3.org/ns/ttml');\r\n    }\r\n\r\n    function registerEvents() {\r\n        eventBus.on(events.INIT_REQUESTED, onInitializationRequested, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\r\n        eventBus.on(events.PLAYBACK_PAUSED, onPlaybackPaused, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\r\n        eventBus.on(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\r\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\r\n        eventBus.on(events.TTML_TO_PARSE, onTTMLPreProcess, instance);\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(events.INIT_REQUESTED, onInitializationRequested, this);\r\n        eventBus.off(events.PLAYBACK_PAUSED, onPlaybackPaused, this);\r\n        eventBus.off(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, this);\r\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\r\n        eventBus.off(events.TTML_TO_PARSE, onTTMLPreProcess, this);\r\n    }\r\n\r\n    function createMssParser() {\r\n        mssParser = MssParser(context).create(config);\r\n        return mssParser;\r\n    }\r\n\r\n    instance = {\r\n        reset: reset,\r\n        createMssParser: createMssParser,\r\n        registerEvents: registerEvents\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssHandler.__dashjs_factory_name = 'MssHandler';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(MssHandler); /* jshint ignore:line */\r\nfactory.errors = MssErrors;\r\ndashjs.FactoryMaker.updateClassFactory(MssHandler.__dashjs_factory_name, factory); /* jshint ignore:line */\r\nexport default factory; /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ErrorsBase from '../../core/errors/ErrorsBase';\r\n/**\r\n * @class\r\n *\r\n */\r\nclass MssErrors extends ErrorsBase {\r\n\tconstructor () {\r\n        super();\r\n        /**\r\n         * Error code returned when no tfrf box is detected in MSS live stream\r\n         */\r\n        this.MSS_NO_TFRF_CODE = 200;\r\n        this.MSS_UNSUPPORTED_CODEC_CODE = 201;\r\n        /**\r\n         * Error message returned when no tfrf box is detected in MSS live stream\r\n         */\r\n        this.MSS_NO_TFRF_MESSAGE = 'Missing tfrf in live media segment';\r\n        this.MSS_UNSUPPORTED_CODEC_MESSAGE = 'Unsupported codec';\r\n    }\r\n}\r\n\r\nlet mssErrors = new MssErrors();\r\nexport default mssErrors;",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MssHandler from './MssHandler';\r\n\r\n// Shove both of these into the global scope\r\nvar context = (typeof window !== 'undefined' && window) || global;\r\n\r\nvar dashjs = context.dashjs;\r\nif (!dashjs) {\r\n    dashjs = context.dashjs = {};\r\n}\r\n\r\ndashjs.MssHandler = MssHandler;\r\n\r\nexport default dashjs;\r\nexport { MssHandler };\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module MssParser\r\n * @param {Object} config object\r\n */\r\nfunction MssParser(config) {\r\n    config = config || {};\r\n    const BASE64 = config.BASE64;\r\n    const debug = config.debug;\r\n    const constants = config.constants;\r\n    const manifestModel = config.manifestModel;\r\n\r\n    const DEFAULT_TIME_SCALE = 10000000.0;\r\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AVC1', 'H264', 'TTML', 'DFXP'];\r\n    // MPEG-DASH Role and accessibility mapping according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\r\n    const ROLE = {\r\n        'SUBT': 'alternate',\r\n        'CAPT': 'alternate', // 'CAPT' is commonly equivalent to 'SUBT'\r\n        'DESC': 'main'\r\n    };\r\n    const ACCESSIBILITY = {\r\n        'DESC': '2'\r\n    };\r\n    const samplingFrequencyIndex = {\r\n        96000: 0x0,\r\n        88200: 0x1,\r\n        64000: 0x2,\r\n        48000: 0x3,\r\n        44100: 0x4,\r\n        32000: 0x5,\r\n        24000: 0x6,\r\n        22050: 0x7,\r\n        16000: 0x8,\r\n        12000: 0x9,\r\n        11025: 0xA,\r\n        8000: 0xB,\r\n        7350: 0xC\r\n    };\r\n    const mimeTypeMap = {\r\n        'video': 'video/mp4',\r\n        'audio': 'audio/mp4',\r\n        'text': 'application/mp4'\r\n    };\r\n\r\n    let instance,\r\n        logger,\r\n        mediaPlayerModel;\r\n\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        mediaPlayerModel = config.mediaPlayerModel;\r\n    }\r\n\r\n    function mapPeriod(smoothStreamingMedia, timescale) {\r\n        const period = {};\r\n        let streams,\r\n            adaptation;\r\n\r\n        // For each StreamIndex node, create an AdaptationSet element\r\n        period.AdaptationSet_asArray = [];\r\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\r\n        for (let i = 0; i < streams.length; i++) {\r\n            adaptation = mapAdaptationSet(streams[i], timescale);\r\n            if (adaptation !== null) {\r\n                period.AdaptationSet_asArray.push(adaptation);\r\n            }\r\n        }\r\n\r\n        if (period.AdaptationSet_asArray.length > 0) {\r\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\r\n        }\r\n\r\n        return period;\r\n    }\r\n\r\n    function mapAdaptationSet(streamIndex, timescale) {\r\n        const adaptationSet = {};\r\n        const representations = [];\r\n        let segmentTemplate;\r\n        let qualityLevels,\r\n            representation,\r\n            segments,\r\n            i;\r\n\r\n        adaptationSet.id = streamIndex.getAttribute('Name') ? streamIndex.getAttribute('Name') : streamIndex.getAttribute('Type');\r\n        adaptationSet.contentType = streamIndex.getAttribute('Type');\r\n        adaptationSet.lang = streamIndex.getAttribute('Language') || 'und';\r\n        adaptationSet.mimeType = mimeTypeMap[adaptationSet.contentType];\r\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\r\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\r\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\r\n\r\n        // Map subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\r\n        if (adaptationSet.subType) {\r\n            if (ROLE[adaptationSet.subType]) {\r\n                let role = {\r\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\r\n                    value: ROLE[adaptationSet.subType]\r\n                };\r\n                adaptationSet.Role = role;\r\n                adaptationSet.Role_asArray = [role];\r\n            }\r\n            if (ACCESSIBILITY[adaptationSet.subType]) {\r\n                let accessibility = {\r\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\r\n                    value: ACCESSIBILITY[adaptationSet.subType]\r\n                };\r\n                adaptationSet.Accessibility = accessibility;\r\n                adaptationSet.Accessibility_asArray = [accessibility];\r\n            }\r\n        }\r\n\r\n        // Create a SegmentTemplate with a SegmentTimeline\r\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\r\n\r\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\r\n        // For each QualityLevel node, create a Representation element\r\n        for (i = 0; i < qualityLevels.length; i++) {\r\n            // Propagate BaseURL and mimeType\r\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\r\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\r\n\r\n            // Set quality level id\r\n            qualityLevels[i].Id = adaptationSet.id + '_' + qualityLevels[i].getAttribute('Index');\r\n\r\n            // Map Representation to QualityLevel\r\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\r\n\r\n            if (representation !== null) {\r\n                // Copy SegmentTemplate into Representation\r\n                representation.SegmentTemplate = segmentTemplate;\r\n\r\n                representations.push(representation);\r\n            }\r\n        }\r\n\r\n        if (representations.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\r\n        adaptationSet.Representation_asArray = representations;\r\n\r\n        // Set SegmentTemplate\r\n        adaptationSet.SegmentTemplate = segmentTemplate;\r\n\r\n        segments = segmentTemplate.SegmentTimeline.S_asArray;\r\n\r\n        return adaptationSet;\r\n    }\r\n\r\n    function mapRepresentation(qualityLevel, streamIndex) {\r\n        const representation = {};\r\n        const type = streamIndex.getAttribute('Type');\r\n        let fourCCValue = null;\r\n\r\n        representation.id = qualityLevel.Id;\r\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\r\n        representation.mimeType = qualityLevel.mimeType;\r\n        representation.width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\r\n        representation.height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\r\n\r\n        fourCCValue = qualityLevel.getAttribute('FourCC');\r\n\r\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\r\n        if (fourCCValue === null || fourCCValue === '') {\r\n            fourCCValue = streamIndex.getAttribute('FourCC');\r\n        }\r\n\r\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\r\n        // then we consider the stream is an audio AAC stream\r\n        if (fourCCValue === null || fourCCValue === '') {\r\n            if (type === 'audio') {\r\n                fourCCValue = 'AAC';\r\n            } else if (type === 'video') {\r\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\r\n                return null;\r\n            }\r\n        }\r\n\r\n        // Check if codec is supported\r\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\r\n            // Do not send warning\r\n            logger.warn('Codec not supported: ' + fourCCValue);\r\n            return null;\r\n        }\r\n\r\n        // Get codecs value according to FourCC field\r\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\r\n            representation.codecs = getH264Codec(qualityLevel);\r\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\r\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\r\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\r\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\r\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\r\n            representation.codecs = constants.STPP;\r\n        }\r\n\r\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\r\n        representation.BaseURL = qualityLevel.BaseURL;\r\n\r\n        return representation;\r\n    }\r\n\r\n    function getH264Codec(qualityLevel) {\r\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\r\n        let nalHeader,\r\n            avcoti;\r\n\r\n\r\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\r\n        // three bytes in the sequence parameter set NAL unit.\r\n        // => Find the SPS nal header\r\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\r\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\r\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\r\n\r\n        return 'avc1.' + avcoti;\r\n    }\r\n\r\n    function getAACCodec(qualityLevel, fourCCValue) {\r\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\r\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\r\n        let objectType = 0;\r\n        let codecPrivateDataHex,\r\n            arr16,\r\n            indexFreq,\r\n            extensionSamplingFrequencyIndex;\r\n\r\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\r\n        //set objectType to 5 => strange, it should be 2\r\n        if (fourCCValue === 'AACH') {\r\n            objectType = 0x05;\r\n        }\r\n        //if codecPrivateData is empty, build it :\r\n        if (codecPrivateData === undefined || codecPrivateData === '') {\r\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\r\n            indexFreq = samplingFrequencyIndex[samplingRate];\r\n            if (fourCCValue === 'AACH') {\r\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\r\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\r\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\r\n                codecPrivateData = new Uint8Array(4);\r\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\r\n                // equals to SamplingRate*2\r\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\r\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\r\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\r\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\r\n                codecPrivateData[3] = 0x0; //alignment bits\r\n\r\n                arr16 = new Uint16Array(2);\r\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\r\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\r\n                //convert decimal to hex value\r\n                codecPrivateDataHex = arr16[0].toString(16);\r\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\r\n\r\n            } else {\r\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\r\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\r\n                codecPrivateData = new Uint8Array(2);\r\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\r\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\r\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\r\n                // put the 2 bytes in an 16 bits array\r\n                arr16 = new Uint16Array(1);\r\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\r\n                //convert decimal to hex value\r\n                codecPrivateDataHex = arr16[0].toString(16);\r\n            }\r\n\r\n            codecPrivateData = '' + codecPrivateDataHex;\r\n            codecPrivateData = codecPrivateData.toUpperCase();\r\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\r\n        } else if (objectType === 0) {\r\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\r\n        }\r\n\r\n        return 'mp4a.40.' + objectType;\r\n    }\r\n\r\n    function mapSegmentTemplate(streamIndex, timescale) {\r\n        const segmentTemplate = {};\r\n        let mediaUrl,\r\n            streamIndexTimeScale;\r\n\r\n        mediaUrl = streamIndex.getAttribute('Url').replace('{bitrate}', '$Bandwidth$');\r\n        mediaUrl = mediaUrl.replace('{start time}', '$Time$');\r\n\r\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\r\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\r\n\r\n        segmentTemplate.media = mediaUrl;\r\n        segmentTemplate.timescale = streamIndexTimeScale;\r\n\r\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\r\n\r\n        return segmentTemplate;\r\n    }\r\n\r\n    function mapSegmentTimeline(streamIndex, timescale) {\r\n        const segmentTimeline = {};\r\n        const chunks = streamIndex.getElementsByTagName('c');\r\n        const segments = [];\r\n        let segment,\r\n            prevSegment,\r\n            tManifest,\r\n            i,j,r;\r\n        let duration = 0;\r\n\r\n        for (i = 0; i < chunks.length; i++) {\r\n            segment = {};\r\n\r\n            // Get time 't' attribute value\r\n            tManifest = chunks[i].getAttribute('t');\r\n\r\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\r\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\r\n            segment.tManifest = parseFloat(tManifest);\r\n            segment.t = parseFloat(tManifest);\r\n\r\n            // Get duration 'd' attribute value\r\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\r\n\r\n            // If 't' not defined for first segment then t=0\r\n            if ((i === 0) && !segment.t) {\r\n                segment.t = 0;\r\n            }\r\n\r\n            if (i > 0) {\r\n                prevSegment = segments[segments.length - 1];\r\n                // Update previous segment duration if not defined\r\n                if (!prevSegment.d) {\r\n                    if (prevSegment.tManifest) {\r\n                        prevSegment.d = parseFloat(tManifest) - parseFloat(prevSegment.tManifest);\r\n                    } else {\r\n                        prevSegment.d = segment.t - prevSegment.t;\r\n                    }\r\n                    duration += prevSegment.d;\r\n                }\r\n                // Set segment absolute timestamp if not set in manifest\r\n                if (!segment.t) {\r\n                    if (prevSegment.tManifest) {\r\n                        segment.tManifest = parseFloat(prevSegment.tManifest) + prevSegment.d;\r\n                        segment.t = parseFloat(segment.tManifest);\r\n                    } else {\r\n                        segment.t = prevSegment.t + prevSegment.d;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (segment.d) {\r\n                duration += segment.d;\r\n            }\r\n\r\n            // Create new segment\r\n            segments.push(segment);\r\n\r\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\r\n            r = parseFloat(chunks[i].getAttribute('r'));\r\n            if (r) {\r\n\r\n                for (j = 0; j < (r - 1); j++) {\r\n                    prevSegment = segments[segments.length - 1];\r\n                    segment = {};\r\n                    segment.t = prevSegment.t + prevSegment.d;\r\n                    segment.d = prevSegment.d;\r\n                    if (prevSegment.tManifest) {\r\n                        segment.tManifest  = parseFloat(prevSegment.tManifest) + prevSegment.d;\r\n                    }\r\n                    duration += segment.d;\r\n                    segments.push(segment);\r\n                }\r\n            }\r\n        }\r\n\r\n        segmentTimeline.S = segments;\r\n        segmentTimeline.S_asArray = segments;\r\n        segmentTimeline.duration = duration / timescale;\r\n\r\n        return segmentTimeline;\r\n    }\r\n\r\n    function getKIDFromProtectionHeader(protectionHeader) {\r\n        let prHeader,\r\n            wrmHeader,\r\n            xmlReader,\r\n            KID;\r\n\r\n        // Get PlayReady header as byte array (base64 decoded)\r\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\r\n\r\n        // Get Right Management header (WRMHEADER) from PlayReady header\r\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\r\n\r\n        // Convert from multi-byte to unicode\r\n        wrmHeader = new Uint16Array(wrmHeader.buffer);\r\n\r\n        // Convert to string\r\n        wrmHeader = String.fromCharCode.apply(null, wrmHeader);\r\n\r\n        // Parse <WRMHeader> to get KID field value\r\n        xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\r\n        KID = xmlReader.querySelector('KID').textContent;\r\n\r\n        // Get KID (base64 decoded) as byte array\r\n        KID = BASE64.decodeArray(KID);\r\n\r\n        // Convert UUID from little-endian to big-endian\r\n        convertUuidEndianness(KID);\r\n\r\n        return KID;\r\n    }\r\n\r\n    function getWRMHeaderFromPRHeader(prHeader) {\r\n        let length,\r\n            recordCount,\r\n            recordType,\r\n            recordLength,\r\n            recordValue;\r\n        let i = 0;\r\n\r\n        // Parse PlayReady header\r\n\r\n        // Length - 32 bits (LE format)\r\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i];\r\n        i += 4;\r\n\r\n        // Record count - 16 bits (LE format)\r\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i];\r\n        i += 2;\r\n\r\n        // Parse records\r\n        while (i < prHeader.length) {\r\n            // Record type - 16 bits (LE format)\r\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\r\n            i += 2;\r\n\r\n            // Check if Rights Management header (record type = 0x01)\r\n            if (recordType === 0x01) {\r\n\r\n                // Record length - 16 bits (LE format)\r\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\r\n                i += 2;\r\n\r\n                // Record value => contains <WRMHEADER>\r\n                recordValue = new Uint8Array(recordLength);\r\n                recordValue.set(prHeader.subarray(i, i + recordLength));\r\n                return recordValue;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function convertUuidEndianness(uuid) {\r\n        swapBytes(uuid, 0, 3);\r\n        swapBytes(uuid, 1, 2);\r\n        swapBytes(uuid, 4, 5);\r\n        swapBytes(uuid, 6, 7);\r\n    }\r\n\r\n    function swapBytes(bytes, pos1, pos2) {\r\n        const temp = bytes[pos1];\r\n        bytes[pos1] = bytes[pos2];\r\n        bytes[pos2] = temp;\r\n    }\r\n\r\n\r\n    function createPRContentProtection(protectionHeader) {\r\n        let pro = {\r\n            __text: protectionHeader.firstChild.data,\r\n            __prefix: 'mspr'\r\n        };\r\n        return {\r\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\r\n            value: 'com.microsoft.playready',\r\n            pro: pro,\r\n            pro_asArray: pro\r\n        };\r\n    }\r\n\r\n    function createWidevineContentProtection(protectionHeader, KID) {\r\n        // Create Widevine CENC header (Protocol Buffer) with KID value\r\n        const wvCencHeader = new Uint8Array(2 + KID.length);\r\n        wvCencHeader[0] = 0x12;\r\n        wvCencHeader[1] = 0x10;\r\n        wvCencHeader.set(KID, 2);\r\n\r\n        // Create a pssh box\r\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\r\n        let pssh = new Uint8Array(length);\r\n        let i = 0;\r\n\r\n        // Set box length value\r\n        pssh[i++] = (length & 0xFF000000) >> 24;\r\n        pssh[i++] = (length & 0x00FF0000) >> 16;\r\n        pssh[i++] = (length & 0x0000FF00) >> 8;\r\n        pssh[i++] = (length & 0x000000FF);\r\n\r\n        // Set type ('pssh'), version (0) and flags (0)\r\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\r\n        i += 8;\r\n\r\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\r\n        pssh.set([0xed, 0xef, 0x8b, 0xa9,  0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\r\n        i += 16;\r\n\r\n        // Set data length value\r\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\r\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\r\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\r\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\r\n\r\n        // Copy Widevine CENC header\r\n        pssh.set(wvCencHeader, i);\r\n\r\n        // Convert to BASE64 string\r\n        pssh = String.fromCharCode.apply(null, pssh);\r\n        pssh = BASE64.encodeASCII(pssh);\r\n\r\n        return {\r\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\r\n            value: 'com.widevine.alpha',\r\n            pssh: {\r\n                __text: pssh\r\n            }\r\n        };\r\n    }\r\n\r\n    function processManifest(xmlDoc, manifestLoadedTime) {\r\n        const manifest = {};\r\n        const contentProtections = [];\r\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\r\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\r\n        let protectionHeader = null;\r\n        let period,\r\n            adaptations,\r\n            contentProtection,\r\n            KID,\r\n            timestampOffset,\r\n            startTime,\r\n            segments,\r\n            timescale,\r\n            i, j;\r\n\r\n        // Set manifest node properties\r\n        manifest.protocol = 'MSS';\r\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\r\n        manifest.type = smoothStreamingMedia.getAttribute('IsLive') === 'TRUE' ? 'dynamic' : 'static';\r\n        timescale =  smoothStreamingMedia.getAttribute('TimeScale');\r\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\r\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\r\n        if (dvrWindowLength === 0 && smoothStreamingMedia.getAttribute('CanSeek') === 'TRUE') {\r\n            dvrWindowLength = Infinity;\r\n        }\r\n        if (dvrWindowLength > 0) {\r\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\r\n        }\r\n\r\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\r\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\r\n        manifest.minBufferTime = mediaPlayerModel.getStableBufferTime();\r\n        manifest.ttmlTimeIsRelative = true;\r\n\r\n        // Live manifest with Duration = start-over\r\n        if (manifest.type === 'dynamic' && duration > 0) {\r\n            manifest.type = 'static';\r\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\r\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\r\n            // Duration will be set according to current segment timeline duration (see below)\r\n        }\r\n\r\n        // In case of live streams, set availabilityStartTime property according to DVRWindowLength\r\n        if (manifest.type === 'dynamic'  && manifest.timeShiftBufferDepth < Infinity) {\r\n            manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - (manifest.timeShiftBufferDepth * 1000));\r\n            manifest.refreshManifestOnSwitchTrack = true;\r\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\r\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\r\n        }\r\n\r\n        // Map period node to manifest root node\r\n        manifest.Period = mapPeriod(smoothStreamingMedia, manifest.timescale);\r\n        manifest.Period_asArray = [manifest.Period];\r\n\r\n        // Initialize period start time\r\n        period = manifest.Period;\r\n        period.start = 0;\r\n\r\n        // Uncomment to test live to static manifests\r\n        // if (manifest.type !== 'static') {\r\n        //     manifest.type = 'static';\r\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\r\n        //     manifest.timeShiftBufferDepth = null;\r\n        // }\r\n\r\n        // ContentProtection node\r\n        if (protection !== undefined) {\r\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\r\n\r\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\r\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\r\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\r\n\r\n            // Get KID (in CENC format) from protection header\r\n            KID = getKIDFromProtectionHeader(protectionHeader);\r\n\r\n            // Create ContentProtection for PlayReady\r\n            contentProtection = createPRContentProtection(protectionHeader);\r\n            contentProtection['cenc:default_KID'] = KID;\r\n            contentProtections.push(contentProtection);\r\n\r\n            // Create ContentProtection for Widevine (as a CENC protection)\r\n            contentProtection = createWidevineContentProtection(protectionHeader, KID);\r\n            contentProtection['cenc:default_KID'] = KID;\r\n            contentProtections.push(contentProtection);\r\n\r\n            manifest.ContentProtection = contentProtections;\r\n            manifest.ContentProtection_asArray = contentProtections;\r\n        }\r\n\r\n        adaptations = period.AdaptationSet_asArray;\r\n\r\n        for (i = 0; i < adaptations.length; i += 1) {\r\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\r\n            // Propagate content protection information into each adaptation\r\n            if (manifest.ContentProtection !== undefined) {\r\n                adaptations[i].ContentProtection = manifest.ContentProtection;\r\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\r\n            }\r\n\r\n            if (manifest.type === 'dynamic') {\r\n                // Set availabilityStartTime for infinite DVR Window from segment timeline duration\r\n                if (manifest.timeShiftBufferDepth === Infinity) {\r\n                    manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - (adaptations[i].SegmentTemplate.SegmentTimeline.duration * 1000));\r\n                }\r\n                // Match timeShiftBufferDepth to video segment timeline duration\r\n                if (manifest.timeShiftBufferDepth > 0 &&\r\n                    manifest.timeShiftBufferDepth !== Infinity &&\r\n                    adaptations[i].contentType === 'video' &&\r\n                    manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\r\n                    manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (manifest.timeShiftBufferDepth < manifest.minBufferTime) {\r\n            manifest.minBufferTime = manifest.timeShiftBufferDepth;\r\n        }\r\n\r\n        // Delete Content Protection under root manifest node\r\n        delete manifest.ContentProtection;\r\n        delete manifest.ContentProtection_asArray;\r\n\r\n        // In case of VOD streams, check if start time is greater than 0\r\n        // Then determine timestamp offset according to higher audio/video start time\r\n        // (use case = live stream delinearization)\r\n        if (manifest.type === 'static') {\r\n            // In case of start-over stream and manifest reloading (due to track switch)\r\n            // we consider previous timestampOffset to keep timelines synchronized\r\n            var prevManifest = manifestModel.getValue();\r\n            if (prevManifest && prevManifest.timestampOffset) {\r\n                timestampOffset = prevManifest.timestampOffset;\r\n            } else {\r\n                for (i = 0; i < adaptations.length; i++) {\r\n                    if (adaptations[i].contentType === 'audio' || adaptations[i].contentType === 'video') {\r\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\r\n                        startTime = segments[0].t / adaptations[i].SegmentTemplate.timescale;\r\n                        if (timestampOffset === undefined) {\r\n                            timestampOffset = startTime;\r\n                        }\r\n                        timestampOffset = Math.min(timestampOffset, startTime);\r\n                        // Correct content duration according to minimum adaptation's segment timeline duration\r\n                        // in order to force <video> element sending 'ended' event\r\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\r\n                    }\r\n                }\r\n            }\r\n            // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\r\n            if (timestampOffset > 0) {\r\n                manifest.timestampOffset = timestampOffset;\r\n                for (i = 0; i < adaptations.length; i++) {\r\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\r\n                    for (j = 0; j < segments.length; j++) {\r\n                        if (!segments[j].tManifest) {\r\n                            segments[j].tManifest = segments[j].t;\r\n                        }\r\n                        segments[j].t -= (timestampOffset * adaptations[i].SegmentTemplate.timescale);\r\n                    }\r\n                    if (adaptations[i].contentType === 'audio' || adaptations[i].contentType === 'video') {\r\n                        period.start = Math.max(segments[0].t, period.start);\r\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\r\n                    }\r\n                }\r\n                period.start /= manifest.timescale;\r\n            }\r\n        }\r\n\r\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\r\n        // and the avoid 'ended' event not being raised\r\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\r\n        period.duration = manifest.mediaPresentationDuration;\r\n\r\n        return manifest;\r\n    }\r\n\r\n    function parseDOM(data) {\r\n        let xmlDoc = null;\r\n\r\n        if (window.DOMParser) {\r\n            const parser = new window.DOMParser();\r\n\r\n            xmlDoc = parser.parseFromString(data, 'text/xml');\r\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\r\n                throw new Error('parsing the manifest failed');\r\n            }\r\n        }\r\n\r\n        return xmlDoc;\r\n    }\r\n\r\n    function getMatchers() {\r\n        return null;\r\n    }\r\n\r\n    function getIron() {\r\n        return null;\r\n    }\r\n\r\n    function internalParse(data) {\r\n        let xmlDoc = null;\r\n        let manifest = null;\r\n\r\n        const startTime = window.performance.now();\r\n\r\n        // Parse the MSS XML manifest\r\n        xmlDoc = parseDOM(data);\r\n\r\n        const xmlParseTime = window.performance.now();\r\n\r\n        if (xmlDoc === null) {\r\n            return null;\r\n        }\r\n\r\n        // Convert MSS manifest into DASH manifest\r\n        manifest = processManifest(xmlDoc, new Date());\r\n\r\n        const mss2dashTime = window.performance.now();\r\n\r\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\r\n\r\n        return manifest;\r\n    }\r\n\r\n    instance = {\r\n        parse: internalParse,\r\n        getMatchers: getMatchers,\r\n        getIron: getIron\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssParser.__dashjs_factory_name = 'MssParser';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../core/events/EventsBase';\r\n/**\r\n * @class\r\n *\r\n */\r\nclass MediaPlayerEvents extends EventsBase {\r\n\r\n    /**\r\n     * @description Public facing external events to be used when developing a player that implements dash.js.\r\n     */\r\n    constructor() {\r\n        super();\r\n        /**\r\n         * Triggered when playback will not start yet\r\n         * as the MPD's availabilityStartTime is in the future.\r\n         * Check delay property in payload to determine time before playback will start.\r\n         */\r\n        this.AST_IN_FUTURE = 'astInFuture';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes to stalled.\r\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\r\n         * @event MediaPlayerEvents#BUFFER_EMPTY\r\n         */\r\n        this.BUFFER_EMPTY = 'bufferStalled';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes to loaded.\r\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\r\n         * @event MediaPlayerEvents#BUFFER_LOADED\r\n         */\r\n        this.BUFFER_LOADED = 'bufferLoaded';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\r\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\r\n         */\r\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\r\n\r\n        /**\r\n         * Triggered when there is an error from the element or MSE source buffer.\r\n         * @event MediaPlayerEvents#ERROR\r\n         */\r\n        this.ERROR = 'error';\r\n\r\n        /**\r\n         * Triggered when a fragment download has completed.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\r\n         */\r\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\r\n\r\n        /**\r\n         * Triggered when a partial fragment download has completed.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\r\n         */\r\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\r\n        /**\r\n         * Triggered when a fragment download has started.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\r\n         */\r\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\r\n\r\n        /**\r\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\r\n         */\r\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\r\n\r\n        /**\r\n         * Triggered when {@link module:Debug} logger methods are called.\r\n         * @event MediaPlayerEvents#LOG\r\n         */\r\n        this.LOG = 'log';\r\n\r\n        //TODO refactor with internal event\r\n        /**\r\n         * Triggered when the manifest load is complete\r\n         * @event MediaPlayerEvents#MANIFEST_LOADED\r\n         */\r\n        this.MANIFEST_LOADED = 'manifestLoaded';\r\n\r\n        /**\r\n         * Triggered anytime there is a change to the overall metrics.\r\n         * @event MediaPlayerEvents#METRICS_CHANGED\r\n         */\r\n        this.METRICS_CHANGED = 'metricsChanged';\r\n\r\n        /**\r\n         * Triggered when an individual metric is added, updated or cleared.\r\n         * @event MediaPlayerEvents#METRIC_CHANGED\r\n         */\r\n        this.METRIC_CHANGED = 'metricChanged';\r\n\r\n        /**\r\n         * Triggered every time a new metric is added.\r\n         * @event MediaPlayerEvents#METRIC_ADDED\r\n         */\r\n        this.METRIC_ADDED = 'metricAdded';\r\n\r\n        /**\r\n         * Triggered every time a metric is updated.\r\n         * @event MediaPlayerEvents#METRIC_UPDATED\r\n         */\r\n        this.METRIC_UPDATED = 'metricUpdated';\r\n\r\n        /**\r\n         * Triggered at the stream end of a period.\r\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\r\n         */\r\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\r\n\r\n        /**\r\n         * Triggered when a new period starts.\r\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\r\n         */\r\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\r\n\r\n        /**\r\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\r\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\r\n         */\r\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\r\n\r\n        /**\r\n         * Triggered when the new ABR quality is being rendered on-screen.\r\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\r\n         */\r\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\r\n\r\n        /**\r\n         * Triggered when the new track is being rendered.\r\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\r\n         */\r\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\r\n\r\n        /**\r\n         * Triggered when the source is setup and ready.\r\n         * @event MediaPlayerEvents#SOURCE_INITIALIZED\r\n         */\r\n        this.SOURCE_INITIALIZED = 'sourceInitialized';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is loaded\r\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\r\n         */\r\n        this.STREAM_INITIALIZED = 'streamInitialized';\r\n\r\n        /**\r\n         * Triggered when the player has been reset.\r\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\r\n         */\r\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\r\n\r\n        /**\r\n         * Triggered once all text tracks detected in the MPD are added to the video element.\r\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\r\n         */\r\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\r\n\r\n        /**\r\n         * Triggered when a text track is added to the video element's TextTrackList\r\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\r\n         */\r\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\r\n\r\n        /**\r\n         * Triggered when a ttml chunk is parsed.\r\n         * @event MediaPlayerEvents#TTML_PARSED\r\n         */\r\n        this.TTML_PARSED = 'ttmlParsed';\r\n\r\n        /**\r\n         * Triggered when a ttml chunk has to be parsed.\r\n         * @event MediaPlayerEvents#TTML_TO_PARSE\r\n         */\r\n        this.TTML_TO_PARSE = 'ttmlToParse';\r\n\r\n        /**\r\n         * Triggered when a caption is rendered.\r\n         * @event MediaPlayerEvents#CAPTION_RENDERED\r\n         */\r\n        this.CAPTION_RENDERED = 'captionRendered';\r\n\r\n        /**\r\n         * Triggered when the caption container is resized.\r\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\r\n         */\r\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\r\n\r\n        /**\r\n         * Sent when enough data is available that the media can be played,\r\n         * at least for a couple of frames.  This corresponds to the\r\n         * HAVE_ENOUGH_DATA readyState.\r\n         * @event MediaPlayerEvents#CAN_PLAY\r\n         */\r\n        this.CAN_PLAY = 'canPlay';\r\n\r\n        /**\r\n         * Sent when playback completes.\r\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\r\n         */\r\n        this.PLAYBACK_ENDED = 'playbackEnded';\r\n\r\n        /**\r\n         * Sent when an error occurs.  The element's error\r\n         * attribute contains more information.\r\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\r\n         */\r\n        this.PLAYBACK_ERROR = 'playbackError';\r\n\r\n        /**\r\n         * Sent when playback is not allowed (for example if user gesture is needed).\r\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\r\n         */\r\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\r\n\r\n        /**\r\n         * The media's metadata has finished loading; all attributes now\r\n         * contain as much useful information as they're going to.\r\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\r\n         */\r\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\r\n\r\n        /**\r\n         * Sent when playback is paused.\r\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\r\n         */\r\n        this.PLAYBACK_PAUSED = 'playbackPaused';\r\n\r\n        /**\r\n         * Sent when the media begins to play (either for the first time, after having been paused,\r\n         * or after ending and then restarting).\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\r\n         */\r\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\r\n\r\n        /**\r\n         * Sent periodically to inform interested parties of progress downloading\r\n         * the media. Information about the current amount of the media that has\r\n         * been downloaded is available in the media element's buffered attribute.\r\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\r\n         */\r\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\r\n\r\n        /**\r\n         * Sent when the playback speed changes.\r\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\r\n         */\r\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\r\n\r\n        /**\r\n         * Sent when a seek operation completes.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\r\n         */\r\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\r\n\r\n        /**\r\n         * Sent when a seek operation begins.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\r\n         */\r\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\r\n\r\n        /**\r\n         * Sent when a seek operation has been asked.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEK_ASKED\r\n         */\r\n        this.PLAYBACK_SEEK_ASKED = 'playbackSeekAsked';\r\n\r\n        /**\r\n         * Sent when the video element reports stalled\r\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\r\n         */\r\n        this.PLAYBACK_STALLED = 'playbackStalled';\r\n\r\n        /**\r\n         * Sent when playback of the media starts after having been paused;\r\n         * that is, when playback is resumed after a prior pause event.\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\r\n         */\r\n        this.PLAYBACK_STARTED = 'playbackStarted';\r\n\r\n        /**\r\n         * The time indicated by the element's currentTime attribute has changed.\r\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\r\n         */\r\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\r\n\r\n        /**\r\n         * Sent when the media playback has stopped because of a temporary lack of data.\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\r\n         */\r\n        this.PLAYBACK_WAITING = 'playbackWaiting';\r\n\r\n        /**\r\n         * Manifest validity changed - As a result of an MPD validity expiration event.\r\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\r\n         */\r\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\r\n    }\r\n}\r\n\r\nlet mediaPlayerEvents = new MediaPlayerEvents();\r\nexport default mediaPlayerEvents;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DashJSError {\r\n    constructor(code, message, data) {\r\n        this.code = code || null;\r\n        this.message = message || null;\r\n        this.data = data || null;\r\n    }\r\n}\r\n\r\nexport default DashJSError;",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DataChunk {\r\n    //Represents a data structure that keep all the necessary info about a single init/media segment\r\n    constructor() {\r\n        this.streamId = null;\r\n        this.mediaInfo = null;\r\n        this.segmentType = null;\r\n        this.quality = NaN;\r\n        this.index = NaN;\r\n        this.bytes = null;\r\n        this.start = NaN;\r\n        this.end = NaN;\r\n        this.duration = NaN;\r\n        this.representationId = null;\r\n        this.endFragment = null;\r\n    }\r\n}\r\n\r\nexport default DataChunk;",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass FragmentRequest {\r\n    constructor() {\r\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\r\n        this.startTime = NaN;\r\n        this.mediaType = null;\r\n        this.mediaInfo = null;\r\n        this.type = null;\r\n        this.duration = NaN;\r\n        this.timescale = NaN;\r\n        this.range = null;\r\n        this.url = null;\r\n        this.serviceLocation = null;\r\n        this.requestStartDate = null;\r\n        this.firstByteDate = null;\r\n        this.requestEndDate = null;\r\n        this.quality = NaN;\r\n        this.index = NaN;\r\n        this.availabilityStartTime = null;\r\n        this.availabilityEndTime = null;\r\n        this.wallStartTime = null;\r\n        this.bytesLoaded = NaN;\r\n        this.bytesTotal = NaN;\r\n        this.delayLoadingTime = NaN;\r\n        this.responseType = 'arraybuffer';\r\n        this.representationId = null;\r\n    }\r\n}\r\n\r\nFragmentRequest.ACTION_DOWNLOAD = 'download';\r\nFragmentRequest.ACTION_COMPLETE = 'complete';\r\n\r\nexport default FragmentRequest;\r\n"
  ]
}